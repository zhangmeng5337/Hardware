; generated by ARM C/C++ Compiler, 4.1 [Build 713]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\stm32f10x_it.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\output\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\ -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\output\stm32f10x_it.crf stm32f10x_it.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NMIException PROC
;;;44     *******************************************************************************/
;;;45     void NMIException(void)
000000  4770              BX       lr
;;;46     {
;;;47     }
;;;48     
                          ENDP

                  HardFaultException PROC
;;;55     *******************************************************************************/
;;;56     void HardFaultException(void)
000002  4770              BX       lr
;;;57     {
;;;58     }
;;;59     
                          ENDP

                  MemManageException PROC
;;;66     *******************************************************************************/
;;;67     void MemManageException(void)
000004  4770              BX       lr
;;;68     {
;;;69     }
;;;70     
                          ENDP

                  BusFaultException PROC
;;;77     *******************************************************************************/
;;;78     void BusFaultException(void)
000006  4770              BX       lr
;;;79     {
;;;80     }
;;;81     
                          ENDP

                  UsageFaultException PROC
;;;88     *******************************************************************************/
;;;89     void UsageFaultException(void)
000008  4770              BX       lr
;;;90     {
;;;91     }
;;;92     
                          ENDP

                  DebugMonitor PROC
;;;99     *******************************************************************************/
;;;100    void DebugMonitor(void)
00000a  4770              BX       lr
;;;101    {
;;;102    }
;;;103    
                          ENDP

                  SVCHandler PROC
;;;110    *******************************************************************************/
;;;111    void SVCHandler(void)
00000c  4770              BX       lr
;;;112    {
;;;113    }
;;;114    
                          ENDP

                  PendSVC PROC
;;;121    *******************************************************************************/
;;;122    void PendSVC(void)
00000e  4770              BX       lr
;;;123    {
;;;124    }
;;;125    
                          ENDP

                  SysTickHandler PROC
;;;132    *******************************************************************************/
;;;133    void SysTickHandler(void)
000010  4770              BX       lr
;;;134    {
;;;135    }
;;;136    
                          ENDP

                  WWDG_IRQHandler PROC
;;;143    *******************************************************************************/
;;;144    void WWDG_IRQHandler(void)
000012  4770              BX       lr
;;;145    {
;;;146    }
;;;147    
                          ENDP

                  PVD_IRQHandler PROC
;;;154    *******************************************************************************/
;;;155    void PVD_IRQHandler(void)
000014  4770              BX       lr
;;;156    {
;;;157    }
;;;158    
                          ENDP

                  TAMPER_IRQHandler PROC
;;;165    *******************************************************************************/
;;;166    void TAMPER_IRQHandler(void)
000016  4770              BX       lr
;;;167    {
;;;168    }
;;;169    
                          ENDP

                  RTC_IRQHandler PROC
;;;176    *******************************************************************************/
;;;177    void RTC_IRQHandler(void)
000018  b510              PUSH     {r4,lr}
;;;178    {
;;;179      if(RTC_GetITStatus(RTC_IT_SEC) != RESET)
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       RTC_GetITStatus
000020  b300              CBZ      r0,|L1.100|
;;;180      {
;;;181        /* Clear the RTC Second interrupt */
;;;182        RTC_ClearITPendingBit(RTC_IT_SEC);
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       RTC_ClearITPendingBit
;;;183        
;;;184        /* Toggle led connected to PD.10 pin each 1s */
;;;185        GPIO_WriteBit(GPIOD, GPIO_Pin_10, (BitAction)(1-GPIO_ReadOutputDataBit(GPIOD, GPIO_Pin_10)));
000028  f44f6180          MOV      r1,#0x400
00002c  4821              LDR      r0,|L1.180|
00002e  f7fffffe          BL       GPIO_ReadOutputDataBit
000032  f1c00001          RSB      r0,r0,#1
000036  b2c4              UXTB     r4,r0
000038  4622              MOV      r2,r4
00003a  f44f6180          MOV      r1,#0x400
00003e  481d              LDR      r0,|L1.180|
000040  f7fffffe          BL       GPIO_WriteBit
;;;186    
;;;187        /* Enable time update */
;;;188        TimeDisplay = 1;
000044  f04f0001          MOV      r0,#1
000048  491b              LDR      r1,|L1.184|
00004a  6008              STR      r0,[r1,#0]  ; TimeDisplay
;;;189    
;;;190        /* Wait until last write operation on RTC registers has finished */
;;;191        RTC_WaitForLastTask();
00004c  f7fffffe          BL       RTC_WaitForLastTask
;;;192        /* Reset RTC Counter when Time is 23:59:59 */
;;;193        if(RTC_GetCounter() == 0x00015180)
000050  f7fffffe          BL       RTC_GetCounter
000054  4919              LDR      r1,|L1.188|
000056  4288              CMP      r0,r1
000058  d104              BNE      |L1.100|
;;;194        {
;;;195          RTC_SetCounter(0x0);
00005a  2000              MOVS     r0,#0
00005c  f7fffffe          BL       RTC_SetCounter
;;;196          /* Wait until last write operation on RTC registers has finished */
;;;197          RTC_WaitForLastTask();
000060  f7fffffe          BL       RTC_WaitForLastTask
                  |L1.100|
;;;198        }
;;;199      }
;;;200    }
000064  bd10              POP      {r4,pc}
;;;201    
                          ENDP

                  FLASH_IRQHandler PROC
;;;208    *******************************************************************************/
;;;209    void FLASH_IRQHandler(void)
000066  4770              BX       lr
;;;210    {
;;;211    }
;;;212    
                          ENDP

                  RCC_IRQHandler PROC
;;;219    *******************************************************************************/
;;;220    void RCC_IRQHandler(void)
000068  4770              BX       lr
;;;221    {
;;;222    }
;;;223    
                          ENDP

                  EXTI0_IRQHandler PROC
;;;230    *******************************************************************************/
;;;231    void EXTI0_IRQHandler(void)
00006a  4770              BX       lr
;;;232    {
;;;233    }
;;;234    
                          ENDP

                  EXTI1_IRQHandler PROC
;;;241    *******************************************************************************/
;;;242    void EXTI1_IRQHandler(void)
00006c  4770              BX       lr
;;;243    {
;;;244    }
;;;245    
                          ENDP

                  EXTI2_IRQHandler PROC
;;;252    *******************************************************************************/
;;;253    void EXTI2_IRQHandler(void)
00006e  4770              BX       lr
;;;254    {
;;;255    }
;;;256    
                          ENDP

                  EXTI3_IRQHandler PROC
;;;263    *******************************************************************************/
;;;264    void EXTI3_IRQHandler(void)
000070  4770              BX       lr
;;;265    {
;;;266    }
;;;267    
                          ENDP

                  EXTI4_IRQHandler PROC
;;;274    *******************************************************************************/
;;;275    void EXTI4_IRQHandler(void)
000072  4770              BX       lr
;;;276    {
;;;277    }
;;;278    
                          ENDP

                  DMAChannel1_IRQHandler PROC
;;;285    *******************************************************************************/
;;;286    void DMAChannel1_IRQHandler(void)
000074  4770              BX       lr
;;;287    {
;;;288    }
;;;289    
                          ENDP

                  DMAChannel2_IRQHandler PROC
;;;296    *******************************************************************************/
;;;297    void DMAChannel2_IRQHandler(void)
000076  4770              BX       lr
;;;298    {
;;;299    }
;;;300    
                          ENDP

                  DMAChannel3_IRQHandler PROC
;;;307    *******************************************************************************/
;;;308    void DMAChannel3_IRQHandler(void)
000078  4770              BX       lr
;;;309    {
;;;310    }
;;;311    
                          ENDP

                  DMAChannel4_IRQHandler PROC
;;;318    *******************************************************************************/
;;;319    void DMAChannel4_IRQHandler(void)
00007a  4770              BX       lr
;;;320    {
;;;321    }
;;;322    
                          ENDP

                  DMAChannel5_IRQHandler PROC
;;;329    *******************************************************************************/
;;;330    void DMAChannel5_IRQHandler(void)
00007c  4770              BX       lr
;;;331    {
;;;332    }
;;;333    
                          ENDP

                  DMAChannel6_IRQHandler PROC
;;;340    *******************************************************************************/
;;;341    void DMAChannel6_IRQHandler(void)
00007e  4770              BX       lr
;;;342    {
;;;343    }
;;;344    
                          ENDP

                  DMAChannel7_IRQHandler PROC
;;;351    *******************************************************************************/
;;;352    void DMAChannel7_IRQHandler(void)
000080  4770              BX       lr
;;;353    {
;;;354    }
;;;355    
                          ENDP

                  ADC_IRQHandler PROC
;;;362    *******************************************************************************/
;;;363    void ADC_IRQHandler(void)
000082  4770              BX       lr
;;;364    {
;;;365    }
;;;366    
                          ENDP

                  USB_HP_CAN_TX_IRQHandler PROC
;;;374    *******************************************************************************/
;;;375    void USB_HP_CAN_TX_IRQHandler(void)
000084  4770              BX       lr
;;;376    {
;;;377    }
;;;378    
                          ENDP

                  USB_LP_CAN_RX0_IRQHandler PROC
;;;386    *******************************************************************************/
;;;387    void USB_LP_CAN_RX0_IRQHandler(void)
000086  4770              BX       lr
;;;388    {
;;;389    }
;;;390    
                          ENDP

                  CAN_RX1_IRQHandler PROC
;;;397    *******************************************************************************/
;;;398    void CAN_RX1_IRQHandler(void)
000088  4770              BX       lr
;;;399    {
;;;400    }
;;;401    
                          ENDP

                  CAN_SCE_IRQHandler PROC
;;;408    *******************************************************************************/
;;;409    void CAN_SCE_IRQHandler(void)
00008a  4770              BX       lr
;;;410    {
;;;411    }
;;;412    
                          ENDP

                  EXTI9_5_IRQHandler PROC
;;;419    *******************************************************************************/
;;;420    void EXTI9_5_IRQHandler(void)
00008c  4770              BX       lr
;;;421    {
;;;422    }
;;;423    
                          ENDP

                  TIM1_BRK_IRQHandler PROC
;;;430    *******************************************************************************/
;;;431    void TIM1_BRK_IRQHandler(void)
00008e  4770              BX       lr
;;;432    {
;;;433    }
;;;434    
                          ENDP

                  TIM1_UP_IRQHandler PROC
;;;442    *******************************************************************************/
;;;443    void TIM1_UP_IRQHandler(void)
000090  4770              BX       lr
;;;444    {
;;;445    }
;;;446    
                          ENDP

                  TIM1_TRG_COM_IRQHandler PROC
;;;454    *******************************************************************************/
;;;455    void TIM1_TRG_COM_IRQHandler(void)
000092  4770              BX       lr
;;;456    {
;;;457    }
;;;458    
                          ENDP

                  TIM1_CC_IRQHandler PROC
;;;465    *******************************************************************************/
;;;466    void TIM1_CC_IRQHandler(void)
000094  4770              BX       lr
;;;467    {
;;;468    }
;;;469    
                          ENDP

                  TIM2_IRQHandler PROC
;;;476    *******************************************************************************/
;;;477    void TIM2_IRQHandler(void)
000096  4770              BX       lr
;;;478    {
;;;479    }
;;;480    
                          ENDP

                  TIM3_IRQHandler PROC
;;;487    *******************************************************************************/
;;;488    void TIM3_IRQHandler(void)
000098  4770              BX       lr
;;;489    {
;;;490    }
;;;491    
                          ENDP

                  TIM4_IRQHandler PROC
;;;498    *******************************************************************************/
;;;499    void TIM4_IRQHandler(void)
00009a  4770              BX       lr
;;;500    {
;;;501    }
;;;502    
                          ENDP

                  I2C1_EV_IRQHandler PROC
;;;509    *******************************************************************************/
;;;510    void I2C1_EV_IRQHandler(void)
00009c  4770              BX       lr
;;;511    {
;;;512    }
;;;513    
                          ENDP

                  I2C1_ER_IRQHandler PROC
;;;520    *******************************************************************************/
;;;521    void I2C1_ER_IRQHandler(void)
00009e  4770              BX       lr
;;;522    {
;;;523    }
;;;524    
                          ENDP

                  I2C2_EV_IRQHandler PROC
;;;531    *******************************************************************************/
;;;532    void I2C2_EV_IRQHandler(void)
0000a0  4770              BX       lr
;;;533    {
;;;534    }
;;;535    
                          ENDP

                  I2C2_ER_IRQHandler PROC
;;;542    *******************************************************************************/
;;;543    void I2C2_ER_IRQHandler(void)
0000a2  4770              BX       lr
;;;544    {
;;;545    }
;;;546    
                          ENDP

                  SPI1_IRQHandler PROC
;;;553    *******************************************************************************/
;;;554    void SPI1_IRQHandler(void)
0000a4  4770              BX       lr
;;;555    {
;;;556    }
;;;557    
                          ENDP

                  SPI2_IRQHandler PROC
;;;564    *******************************************************************************/
;;;565    void SPI2_IRQHandler(void)
0000a6  4770              BX       lr
;;;566    {
;;;567    }
;;;568    
                          ENDP

                  USART1_IRQHandler PROC
;;;575    *******************************************************************************/
;;;576    void USART1_IRQHandler(void)
0000a8  4770              BX       lr
;;;577    {
;;;578    }
;;;579    
                          ENDP

                  USART2_IRQHandler PROC
;;;586    *******************************************************************************/
;;;587    void USART2_IRQHandler(void)
0000aa  4770              BX       lr
;;;588    {
;;;589    }
;;;590    
                          ENDP

                  USART3_IRQHandler PROC
;;;597    *******************************************************************************/
;;;598    void USART3_IRQHandler(void)
0000ac  4770              BX       lr
;;;599    {
;;;600    }
;;;601    
                          ENDP

                  EXTI15_10_IRQHandler PROC
;;;608    *******************************************************************************/
;;;609    void EXTI15_10_IRQHandler(void)
0000ae  4770              BX       lr
;;;610    {
;;;611    }
;;;612    
                          ENDP

                  RTCAlarm_IRQHandler PROC
;;;619    *******************************************************************************/
;;;620    void RTCAlarm_IRQHandler(void)
0000b0  4770              BX       lr
;;;621    {
;;;622    }
;;;623    
                          ENDP

                  USBWakeUp_IRQHandler PROC
;;;630    *******************************************************************************/
;;;631    void USBWakeUp_IRQHandler(void)
0000b2  4770              BX       lr
;;;632    {
;;;633    }
;;;634    
                          ENDP

                  |L1.180|
                          DCD      0x40011400
                  |L1.184|
                          DCD      TimeDisplay
                  |L1.188|
                          DCD      0x00015180
